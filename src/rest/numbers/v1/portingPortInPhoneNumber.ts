/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { inspect, InspectOptions } from "util";
import V1 from "../V1";
const deserialize = require("../../../base/deserialize");
const serialize = require("../../../base/serialize");
import { isValidPathParam } from "../../../base/utility";

export interface PortingPortInPhoneNumberContext {
  /**
   * Remove a PortingPortInPhoneNumberInstance
   *
   * @param callback - Callback to handle processed record
   *
   * @returns Resolves to processed boolean
   */
  remove(
    callback?: (error: Error | null, item?: boolean) => any
  ): Promise<boolean>;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export interface PortingPortInPhoneNumberContextSolution {
  portInRequestSid: string;
  phoneNumberSid: string;
}

export class PortingPortInPhoneNumberContextImpl
  implements PortingPortInPhoneNumberContext
{
  protected _solution: PortingPortInPhoneNumberContextSolution;
  protected _uri: string;

  constructor(
    protected _version: V1,
    portInRequestSid: string,
    phoneNumberSid: string
  ) {
    if (!isValidPathParam(portInRequestSid)) {
      throw new Error("Parameter 'portInRequestSid' is not valid.");
    }

    if (!isValidPathParam(phoneNumberSid)) {
      throw new Error("Parameter 'phoneNumberSid' is not valid.");
    }

    this._solution = { portInRequestSid, phoneNumberSid };
    this._uri = `/Porting/PortIn/${portInRequestSid}/PhoneNumber/${phoneNumberSid}`;
  }

  remove(
    callback?: (error: Error | null, item?: boolean) => any
  ): Promise<boolean> {
    const instance = this;
    let operationVersion = instance._version,
      operationPromise = operationVersion.remove({
        uri: instance._uri,
        method: "delete",
      });

    operationPromise = instance._version.setPromiseCallback(
      operationPromise,
      callback
    );
    return operationPromise;
  }

  /**
   * Provide a user-friendly representation
   *
   * @returns Object
   */
  toJSON() {
    return this._solution;
  }

  [inspect.custom](_depth: any, options: InspectOptions) {
    return inspect(this.toJSON(), options);
  }
}

export interface PortingPortInPhoneNumberSolution {}

export interface PortingPortInPhoneNumberListInstance {
  _version: V1;
  _solution: PortingPortInPhoneNumberSolution;
  _uri: string;

  (
    portInRequestSid: string,
    phoneNumberSid: string
  ): PortingPortInPhoneNumberContext;
  get(
    portInRequestSid: string,
    phoneNumberSid: string
  ): PortingPortInPhoneNumberContext;

  /**
   * Provide a user-friendly representation
   */
  toJSON(): any;
  [inspect.custom](_depth: any, options: InspectOptions): any;
}

export function PortingPortInPhoneNumberListInstance(
  version: V1
): PortingPortInPhoneNumberListInstance {
  const instance = ((portInRequestSid, phoneNumberSid) =>
    instance.get(
      portInRequestSid,
      phoneNumberSid
    )) as PortingPortInPhoneNumberListInstance;

  instance.get = function get(
    portInRequestSid,
    phoneNumberSid
  ): PortingPortInPhoneNumberContext {
    return new PortingPortInPhoneNumberContextImpl(
      version,
      portInRequestSid,
      phoneNumberSid
    );
  };

  instance._version = version;
  instance._solution = {};
  instance._uri = ``;

  instance.toJSON = function toJSON() {
    return instance._solution;
  };

  instance[inspect.custom] = function inspectImpl(
    _depth: any,
    options: InspectOptions
  ) {
    return inspect(instance.toJSON(), options);
  };

  return instance;
}
